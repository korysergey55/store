{"version":3,"file":"static/js/745.678a0a06.chunk.js","mappings":"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","sources":["webpack://store/./src/containers/modalAnt/styles.module.scss?11ca","containers/modalAnt/ModalAnt.js","Firebase/firebase.js","Firebase/signInMetods.js","webpack://store/./src/Components/auth/loginForm/styles.module.scss?5d30","Components/auth/loginForm/LoginForm.js","webpack://store/./src/Components/auth/authForm/styles.module.scss?2a05","Components/auth/authForm/AuthForm.js","webpack://store/./src/Components/auth/resetPasswordForm/styles.module.scss?eccc","Components/auth/resetPasswordForm/ResetForm.js","webpack://store/./src/Components/auth/styles.module.scss?0bab","Components/auth/LoginPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"styles_modal__HWIEM\"};","import { useStore } from '../../storeMobx';\r\nimport { observer } from 'mobx-react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { pathes } from '../../utils/pathes';\r\n\r\nimport styles from './styles.module.scss';\r\nimport { Modal } from 'antd';\r\n\r\nconst ModalAnt = observer(({ title, visible, children, width }) => {\r\n  const { AuthStore } = useStore();\r\n  const navigate = useNavigate();\r\n\r\n  const handleOk = () => {\r\n    AuthStore.toggleAntModalAction();\r\n  };\r\n  const handleCancel = () => {\r\n    AuthStore.toggleAntModalAction();\r\n    navigate(pathes.home);\r\n    AuthStore.resetForgotPasswordAction();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title={title}\r\n      className={styles.modal}\r\n      width={width}\r\n      visible={visible}\r\n      onOk={handleOk}\r\n      onCancel={handleCancel}\r\n      footer={true}\r\n    >\r\n      {children}\r\n    </Modal>\r\n  );\r\n});\r\n\r\nexport default ModalAnt;\r\n","import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/firestore';\r\nimport 'firebase/compat/auth';\r\n\r\nlet firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_WEB_API_KEY,\r\n  authDomain: 'store-c430f.firebaseapp.com',\r\n  databaseURL: 'https://store-c430f-default-rtdb.europe-west1.firebasedatabase.app',\r\n  projectId: 'store-c430f',\r\n  storageBucket: 'store-c430f.appspot.com',\r\n  messagingSenderId: '315502274086',\r\n  appId: '1:315502274086:web:f720a663c7921f5d81a8e7',\r\n  measurementId: 'G-SFR8X80VEE',\r\n};\r\n\r\nexport const app = firebase.initializeApp(firebaseConfig);\r\nexport const auth = app.auth();\r\nexport const db = app.firestore();\r\n","import firebase from 'firebase/compat/app';\r\nimport { auth, db } from './firebase';\r\nimport { toast } from 'react-toastify';\r\nimport { GoogleAuthProvider } from 'firebase/auth';\r\nimport 'firebase/auth';\r\n\r\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\r\nconst facebookProvider = new firebase.auth.FacebookAuthProvider();\r\n\r\nconst signInWithGoogle = async () => {\r\n  try {\r\n    const res = await auth.signInWithPopup(googleProvider);\r\n    if (res) {\r\n      toast.success('You was successfully Login!', {\r\n        theme: 'colored',\r\n      });\r\n    }\r\n    return res;\r\n  } catch (err) {\r\n    toast.error(`${err.message}`, {\r\n      theme: 'colored',\r\n    });\r\n  }\r\n};\r\nconst signInWithFacebook = async () => {\r\n  try {\r\n    const res = await auth.signInWithPopup(facebookProvider);\r\n    return res;\r\n  } catch (err) {\r\n    toast.error(`${err.message}`, {\r\n      theme: 'colored',\r\n    });\r\n  }\r\n};\r\nconst signInWithEmailAndPassword = async (email, password) => {\r\n  try {\r\n    const res = await auth.signInWithEmailAndPassword(email, password);\r\n    if (res) {\r\n      toast.success('You was successfully Login!', {\r\n        theme: 'colored',\r\n      });\r\n    }\r\n    return res;\r\n  } catch (err) {\r\n    toast.error(`${err.message}`, {\r\n      theme: 'colored',\r\n    });\r\n  }\r\n};\r\nconst registerWithEmailAndPassword = async (name, email, password) => {\r\n  try {\r\n    const res = await auth.createUserWithEmailAndPassword(email, password);\r\n    if (res) {\r\n      toast.success('You was successfully registered. Login please!', {\r\n        theme: 'colored',\r\n      });\r\n    }\r\n    const user = res.user;\r\n    await db.collection('users').add({\r\n      uid: user.uid,\r\n      name,\r\n      authProvider: 'local',\r\n      email,\r\n    });\r\n  } catch (err) {\r\n    toast.error(`${err.message}`, {\r\n      theme: 'colored',\r\n    });\r\n  }\r\n};\r\nconst sendPasswordResetEmail = async (email, navigate) => {\r\n  try {\r\n    const response = await auth.sendPasswordResetEmail(email);\r\n    toast('Password reset link sent! Check your email!', {\r\n      theme: 'colored',\r\n    });\r\n    return response;\r\n  } catch (err) {\r\n    toast.error(`${err.message}`, {\r\n      theme: 'colored',\r\n    });\r\n  }\r\n};\r\n\r\nconst logout = () => {\r\n  auth.signOut();\r\n  toast.success('signOut success!', {\r\n    theme: 'colored',\r\n  });\r\n};\r\n\r\nexport {\r\n  signInWithGoogle,\r\n  logout,\r\n  signInWithFacebook,\r\n  signInWithEmailAndPassword,\r\n  registerWithEmailAndPassword,\r\n  sendPasswordResetEmail,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"loginForm\":\"styles_loginForm__GGTzj\",\"subtitle\":\"styles_subtitle__sI8jy\",\"list\":\"styles_list__AMpJ8\",\"item\":\"styles_item__U2OZJ\",\"loginBtn\":\"styles_loginBtn__m4YbU\",\"text\":\"styles_text__SOjyw\"};","import { useStore } from '../../../storeMobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { pathes } from '../../../utils/pathes';\r\n\r\nimport { signInWithGoogle, signInWithFacebook } from '../../../Firebase/signInMetods';\r\n\r\nimport styles from './styles.module.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGoogle, faFacebookF } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst LoginForm = observer(() => {\r\n  const { AuthStore } = useStore();\r\n  const navigate = useNavigate();\r\n  const { t } = useTranslation();\r\n\r\n  const loginGoogle = async () => {\r\n    const res = await signInWithGoogle();\r\n    if (res) {\r\n      AuthStore.loginUserAction(res.credential.accessToken);\r\n      navigate(pathes.home);\r\n    }\r\n  };\r\n\r\n  const loginFacebook = async () => {\r\n    const res = await signInWithFacebook();\r\n    if (res) {\r\n      AuthStore.loginUserAction(res.credential.accessToken);\r\n      navigate(pathes.home);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.loginForm}>\r\n      <h2 className={styles.subtitle}>{t('Вход c помощью')}</h2>\r\n      <ul className={styles.list}>\r\n        <li className={styles.item} name=\"google\" onClick={() => loginGoogle()}>\r\n          <p className={styles.text}> Google</p>\r\n          <button className={styles.loginBtn} type=\"button\">\r\n            <FontAwesomeIcon className={styles.icon} icon={faGoogle} color=\"white\" size=\"2x\" />\r\n          </button>\r\n        </li>\r\n        <li className={styles.item} name=\"facebook\" onClick={() => loginFacebook()}>\r\n          <p className={styles.text}> Facebook</p>\r\n          <button className={styles.loginBtn} type=\"button\">\r\n            <FontAwesomeIcon icon={faFacebookF} color=\"white\" size=\"2x\" />\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default LoginForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"authForm\":\"styles_authForm__9fo40\",\"form\":\"styles_form__OwXF3\",\"btnContainer\":\"styles_btnContainer__UZ9fW\",\"btnChange\":\"styles_btnChange__cs+hq\",\"activ\":\"styles_activ__HcV19\",\"forgotPassword\":\"styles_forgotPassword__CkHcr\"};","import { useState } from 'react';\r\nimport { useStore } from '../../../storeMobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { pathes } from '../../../utils/pathes';\r\nimport { signInWithEmailAndPassword, registerWithEmailAndPassword } from '../../../Firebase/signInMetods.js';\r\n\r\nimport styles from './styles.module.scss';\r\nimport classNames from 'classnames';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\n\r\nconst AuthForm = observer(() => {\r\n  const { AuthStore } = useStore();\r\n  const navigate = useNavigate();\r\n  const { t } = useTranslation();\r\n\r\n  const [login, setLogin] = useState(true);\r\n  const [form] = Form.useForm();\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const setUser = async () => {\r\n    if (login) {\r\n      const res = await signInWithEmailAndPassword(formData.email, formData.password);\r\n      if (res) {\r\n        AuthStore.toggleModalAction();\r\n        navigate(pathes.home);\r\n      }\r\n    } else {\r\n      registerWithEmailAndPassword(formData.name, formData.email, formData.password);\r\n      navigate(pathes.login);\r\n      AuthStore.toggleModalAction();\r\n    }\r\n  };\r\n\r\n  const onChange = evt => {\r\n    const { value, name } = evt.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const onFinish = () => {\r\n    setUser();\r\n    setLogin(true);\r\n    form.setFieldsValue({\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n  const onFinishFailed = errorInfo => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.authForm}>\r\n      <Form\r\n        form={form}\r\n        name=\"AuthForm\"\r\n        className={styles.form}\r\n        labelCol={{ span: 8 }}\r\n        wrapperCol={{ span: 16 }}\r\n        initialValues={{ remember: true }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        autoComplete=\"off\"\r\n      >\r\n        <div className={styles.btnContainer}>\r\n          <Button\r\n            className={classNames(styles.btnChange, { [styles.activ]: login })}\r\n            type=\"primary\"\r\n            onClick={() => setLogin(true)}\r\n          >\r\n            {t('loginPage.sign_in')}\r\n          </Button>\r\n\r\n          <Button\r\n            className={classNames(styles.btnChange, { [styles.activ]: !login })}\r\n            type=\"primary\"\r\n            onClick={() => setLogin(false)}\r\n          >\r\n            {t('loginPage.registration')}\r\n          </Button>\r\n        </div>\r\n\r\n        {!login && (\r\n          <Form.Item\r\n            label={t('loginPage.name')}\r\n            name=\"name\"\r\n            rules={[{ required: true, message: t('loginPage.enter_your_name_please') }]}\r\n          >\r\n            <Input name=\"name\" value={formData.name} onChange={e => onChange(e)} />\r\n          </Form.Item>\r\n        )}\r\n        <Form.Item\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          rules={[{ required: true, message: t('loginPage.enter_your_email_please') }]}\r\n        >\r\n          <Input name=\"email\" value={formData.email} onChange={onChange} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          rules={[{ required: true, message: t('loginPage.enter_your_password_please') }]}\r\n        >\r\n          <Input.Password name=\"password\" value={formData.password} onChange={onChange} />\r\n        </Form.Item>\r\n        {login && (\r\n          <p\r\n            className={styles.forgotPassword}\r\n            type=\"button\"\r\n            onClick={() => {\r\n              AuthStore.setForgotPasswordAction();\r\n            }}\r\n          >\r\n            {t('loginPage.forgot_password')} ?\r\n          </p>\r\n        )}\r\n        <Form.Item\r\n          className={styles.chekbox}\r\n          name=\"remember\"\r\n          valuePropName=\"checked\"\r\n          wrapperCol={{ offset: 8, span: 16 }}\r\n        >\r\n          <Checkbox>{t('loginPage.remember_me')}</Checkbox>\r\n        </Form.Item>\r\n        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            {t('loginPage.confirm')}\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default AuthForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"styles_formContainer__2Df3X\",\"title\":\"styles_title__HmcQ2\",\"label\":\"styles_label__IFkyg\"};","import { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { sendPasswordResetEmail } from '../../../Firebase/signInMetods';\r\nimport { pathes } from '../../../utils/pathes';\r\n\r\nimport styles from './styles.module.scss';\r\nimport { Form, Input, Button } from 'antd';\r\n\r\nconst ResetPasswordPage = () => {\r\n  const navigate = useNavigate();\r\n  const { t } = useTranslation();\r\n\r\n  const [form] = Form.useForm();\r\n  const [userEmail, setUserEmail] = useState('');\r\n\r\n  const onChange = e => {\r\n    const { value } = e.target;\r\n    setUserEmail(value);\r\n  };\r\n  const onFinish = async () => {\r\n    const response = await sendPasswordResetEmail(userEmail);\r\n    if (response) {\r\n      navigate(pathes.home);\r\n    }\r\n  };\r\n  const onFinishFailed = errorInfo => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.formContainer}>\r\n      <Form\r\n        form={form}\r\n        name=\"ResetPasswodForm\"\r\n        initialValues={{ remember: true }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        autoComplete=\"off\"\r\n      >\r\n        <h2 className={styles.title}>{t('resetPasswordPage.reset_password_form')}</h2>\r\n        <Form.Item\r\n          className={styles.label}\r\n          name={['email']}\r\n          label={t('resetPasswordPage.enter_your_email_please')}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: t('resetPasswordPage.enter_valid_email_please'),\r\n              type: 'email',\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            className={styles.input}\r\n            name=\"email\"\r\n            value={userEmail}\r\n            placeholder={t('resetPasswordPage.enter_your_email_please')}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            {t('resetPasswordPage.reset_password')}\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordPage;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"hero\":\"styles_hero__FbkPv\",\"container\":\"styles_container__8s6rz\",\"wripper\":\"styles_wripper__qTrvX\",\"contentWripper\":\"styles_contentWripper__PAC+1\"};","import { useEffect } from 'react';\r\nimport { useStore } from '../../storeMobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport ModalAnt from '../../containers/modalAnt/ModalAnt';\r\nimport LoginForm from './loginForm/LoginForm';\r\nimport AuthForm from './authForm/AuthForm';\r\nimport ResetPasswordPage from './resetPasswordForm/ResetForm';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nconst LoginPage = observer(() => {\r\n  const { AuthStore } = useStore();\r\n  const { antModal, forgotPassword } = AuthStore;\r\n\r\n  useEffect(() => {\r\n    !antModal && AuthStore.toggleAntModalAction();\r\n  }, [AuthStore]);\r\n\r\n  return (\r\n    <div className={styles.LoginPage}>\r\n      <div className={styles.hero}></div>\r\n      <div className={styles.container}>\r\n        {antModal && (\r\n          <ModalAnt visible={true} width=\"\">\r\n            <div className={styles.wripper}>\r\n              {!forgotPassword ? (\r\n                <div className={styles.contentWripper}>\r\n                  <AuthForm />\r\n                  <LoginForm />\r\n                </div>\r\n              ) : (\r\n                <ResetPasswordPage />\r\n              )}\r\n            </div>\r\n          </ModalAnt>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default LoginPage;\r\n"],"names":["observer","_ref","title","visible","children","width","AuthStore","useStore","navigate","useNavigate","_jsx","Modal","className","styles","onOk","handleOk","toggleAntModalAction","onCancel","handleCancel","pathes","home","resetForgotPasswordAction","footer","app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","googleProvider","GoogleAuthProvider","facebookProvider","FacebookAuthProvider","t","useTranslation","loginGoogle","async","res","signInWithPopup","toast","success","theme","err","error","concat","message","signInWithGoogle","loginUserAction","credential","accessToken","loginFacebook","signInWithFacebook","_jsxs","loginForm","subtitle","list","item","name","onClick","text","loginBtn","type","FontAwesomeIcon","icon","faGoogle","color","size","faFacebookF","login","setLogin","useState","form","Form","useForm","formData","setFormData","email","password","setUser","signInWithEmailAndPassword","toggleModalAction","createUserWithEmailAndPassword","user","collection","add","uid","authProvider","registerWithEmailAndPassword","onChange","evt","value","target","prev","authForm","labelCol","span","wrapperCol","initialValues","remember","onFinish","setFieldsValue","onFinishFailed","errorInfo","console","log","autoComplete","btnContainer","Button","classNames","btnChange","activ","Item","label","rules","required","Input","e","Password","forgotPassword","setForgotPasswordAction","chekbox","valuePropName","offset","Checkbox","htmlType","ResetPasswordPage","userEmail","setUserEmail","formContainer","response","sendPasswordResetEmail","input","placeholder","antModal","useEffect","LoginPage","hero","container","ModalAnt","wripper","contentWripper","AuthForm","LoginForm"],"sourceRoot":""}